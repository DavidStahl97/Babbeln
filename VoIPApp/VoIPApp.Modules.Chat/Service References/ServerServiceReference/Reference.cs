//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VoIPApp.Modules.Chat.ServerServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServerServiceReference.IServerService", CallbackContract=typeof(VoIPApp.Modules.Chat.ServerServiceReference.IServerServiceCallback))]
    public interface IServerService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/SendMessage")]
        void SendMessage(SharedCode.Models.Message msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/SendMessage")]
        System.Threading.Tasks.Task SendMessageAsync(SharedCode.Models.Message msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/Subscribe")]
        void Subscribe(MongoDB.Bson.ObjectId id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/Subscribe")]
        System.Threading.Tasks.Task SubscribeAsync(MongoDB.Bson.ObjectId id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/Unsubscribe")]
        void Unsubscribe(MongoDB.Bson.ObjectId id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/Unsubscribe")]
        System.Threading.Tasks.Task UnsubscribeAsync(MongoDB.Bson.ObjectId id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/OnMessageReceived")]
        void OnMessageReceived(SharedCode.Models.Message msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerServiceChannel : VoIPApp.Modules.Chat.ServerServiceReference.IServerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerServiceClient : System.ServiceModel.DuplexClientBase<VoIPApp.Modules.Chat.ServerServiceReference.IServerService>, VoIPApp.Modules.Chat.ServerServiceReference.IServerService {
        
        public ServerServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServerServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SendMessage(SharedCode.Models.Message msg) {
            base.Channel.SendMessage(msg);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(SharedCode.Models.Message msg) {
            return base.Channel.SendMessageAsync(msg);
        }
        
        public void Subscribe(MongoDB.Bson.ObjectId id) {
            base.Channel.Subscribe(id);
        }
        
        public System.Threading.Tasks.Task SubscribeAsync(MongoDB.Bson.ObjectId id) {
            return base.Channel.SubscribeAsync(id);
        }
        
        public void Unsubscribe(MongoDB.Bson.ObjectId id) {
            base.Channel.Unsubscribe(id);
        }
        
        public System.Threading.Tasks.Task UnsubscribeAsync(MongoDB.Bson.ObjectId id) {
            return base.Channel.UnsubscribeAsync(id);
        }
    }
}
